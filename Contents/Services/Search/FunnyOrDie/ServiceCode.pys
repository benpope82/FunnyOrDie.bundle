BASE_URL = 'https://www.funnyordie.com'
SEARCH_URL = 'https://www.funnyordie.com/search_results/a/videos.json?page=1&sort=relevance&query=%s'

####################################################################################################
def Search(query):

    oc = ObjectContainer()
    url = SEARCH_URL % (String.Quote(query, usePlus=True))
    json_obj = JSON.ObjectFromURL(url)

    if not 'html' in json_obj:
        return oc

    for video in HTML.ElementFromString(json_obj['html']).xpath('//article[contains(@class, "video-preview")]'):

        # Filter out any videos which are not hosted on FoD
        url = video.xpath('./a/@href')[0]
        if not url.startswith('/videos/'):
            continue

        title = video.xpath('./a/@title')[0]
        thumb = video.xpath('./a/img/@data-src')[0]

        oc.add(VideoClipObject(
            url = BASE_URL + url,
            title = title,
            thumb = Resource.ContentsOfURLWithFallback(url=thumb)
        ))

    return oc
